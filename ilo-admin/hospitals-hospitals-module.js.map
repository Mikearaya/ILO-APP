{"version":3,"sources":["webpack:///./src/app/features/hospitals/hospital-data.model.ts","webpack:///./src/app/features/hospitals/hospital-form/hospital-form.component.css","webpack:///./src/app/features/hospitals/hospital-form/hospital-form.component.html","webpack:///./src/app/features/hospitals/hospital-form/hospital-form.component.ts","webpack:///./src/app/features/hospitals/hospitals-routing.module.ts","webpack:///./src/app/features/hospitals/hospitals-view/hospitals-view.component.css","webpack:///./src/app/features/hospitals/hospitals-view/hospitals-view.component.html","webpack:///./src/app/features/hospitals/hospitals-view/hospitals-view.component.ts","webpack:///./src/app/features/hospitals/hospitals.module.ts","webpack:///./src/app/features/hospitals/hospitals.service.ts"],"names":[],"mappings":"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","file":"hospitals-hospitals-module.js","sourcesContent":["export interface HospitalModel {\n  ID?: number;\n  name: string;\n  phone_number: string;\n  address: string;\n  region: number;\n}\n\nexport interface HospitalLocaleModel {\n  ID?: number;\n  name: string;\n  address: string;\n  locale: number;\n}\n\nexport class HospitalViewModel {\n  id: number;\n  phone_number: string;\n  name: string;\n  address: string;\n  locale: string;\n  region: string;\n  date_added: Date;\n  date_updated: Date;\n}\n\nexport class HospitalDeletables {\n  hospital_locale: number[] = [];\n}\n\nexport class Hospital {\n  token: string;\n  hospital: HospitalModel;\n  hospital_locale: HospitalLocaleModel[] = [];\n  deleted_ids: HospitalDeletables = new HospitalDeletables();\n  image: Object[] = [];\n}\n\n","module.exports = \".delete-button {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvaWxvLWFkbWluL3NyYy9hcHAvZmVhdHVyZXMvaG9zcGl0YWxzL2hvc3BpdGFsLWZvcm0vaG9zcGl0YWwtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsVUFBVTtBQUNaIiwiZmlsZSI6ImFwcHMvaWxvLWFkbWluL3NyYy9hcHAvZmVhdHVyZXMvaG9zcGl0YWxzL2hvc3BpdGFsLWZvcm0vaG9zcGl0YWwtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbGV0ZS1idXR0b24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IGF1dG87XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container card shadow-lg pl-5 pr-5 md-3\\\">\\n\\n  <form [formGroup]=\\\"hospitalsForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n    <ejs-tab id=\\\"element\\\">\\n      <e-tabitems>\\n        <e-tabitem [header]=\\\"headerText[0]\\\">\\n          <ng-template #content>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-6 form-group \\\">\\n                <label for=\\\"hospital\\\">Medical Center</label>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"hospital\\\"\\n                  aria-describedby=\\\"Medical center\\\" placeholder=\\\"Medical center\\\" />\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"hospitalName.errors\\\">\\n                  <div *ngIf=\\\"hospitalName.errors['required']\\\">\\n                    Hospital Name is required\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-6 form-group\\\">\\n                <label for=\\\"phoneNumber\\\">Phone Number</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" id=\\\"phoneNumber\\\"\\n                  placeholder=\\\"Phone number\\\" />\\n                <small id=\\\"address\\\" class=\\\"form-text text-muted\\\">Address of the medical canter.</small>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"phoneNumber.errors\\\">\\n                  <div *ngIf=\\\"phoneNumber.errors['required']\\\">\\n                    Phone number is required\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\"></div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-6 form-group\\\">\\n                <label for=\\\"address\\\">Address</label>\\n                <input type=\\\"text\\\" formControlName=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\" id=\\\"address\\\"\\n                  aria-describedby=\\\"Address\\\" placeholder=\\\"Address\\\" />\\n                <small id=\\\"address\\\" class=\\\"form-text text-muted\\\">Address of the medical canter.</small>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"address.errors\\\">\\n                  <div *ngIf=\\\"address.errors['required']\\\">\\n                    Hospital address is required\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-6 form-group\\\">\\n                <label for=\\\"region\\\">Region</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"region\\\" id=\\\"region\\\">\\n                  <option>Addis Ababa</option>\\n                  <option>Dire dawa</option>\\n                  <option>Hawassa</option>\\n                  <option>Bishoftu</option>\\n                  <option>Nazret</option>\\n                </select>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"region.errors\\\">\\n                  <div *ngIf=\\\"region.errors['required']\\\">\\n                    Hospital region is required\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12  form-group \\\">\\n                  <ejs-uploader #defaultupload [autoUpload]='false'\\n                [allowedExtensions]=\\\"'image/*'\\\"  name='fileupload' [files]='preLoadFiles'\\n                  [multiple]='false' [asyncSettings]='path'></ejs-uploader>\\n\\n              </div>\\n            </div>\\n\\n          </ng-template>\\n        </e-tabitem>\\n        <e-tabitem [header]=\\\"headerText[1]\\\">\\n          <ng-template #content>\\n            <div formArrayName=\\\"hospitalLocale\\\">\\n              <div *ngFor=\\\"\\n                  let locale of hospitalLocales.controls;\\n                  let i = index;\\n                  let last = last\\n                \\\" [formGroup]=\\\"locale\\\">\\n                <div class=\\\"row\\\" style=\\\"position:relative;\\\">\\n                  <div class=\\\"col-12 col-sm-3 form-group\\\">\\n                    <label for=\\\"locale\\\">locale</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"locale\\\" id=\\\"locale\\\">\\n                      <option *ngFor=\\\"let lang of languages; let i = index\\\" [value]=\\\"lang.ID\\\">{{ lang.name }}</option>\\n                    </select>\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"locale.get('locale').errors\\\">\\n                      <div *ngIf=\\\"locale.get('locale').errors['required']\\\">\\n                        Hospital language is required\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-4 form-group \\\">\\n                    <label for=\\\"hospital\\\">Medical Center</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"hospital\\\"\\n                      aria-describedby=\\\"Medical center\\\" placeholder=\\\"Medical center\\\" />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"locale.get('name').errors\\\">\\n                      <div *ngIf=\\\"locale.get('name').errors['required']\\\">\\n                        Hospital Name is required\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-4 form-group\\\">\\n                    <label for=\\\"region\\\">Address</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\"\\n                      id=\\\"address\\\" aria-describedby=\\\"Address\\\" placeholder=\\\"Address\\\" />\\n                    <small id=\\\"address\\\" class=\\\"form-text text-muted\\\">Address of the medical canter.</small>\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"locale.get('address').errors\\\">\\n                      <div *ngIf=\\\"locale.get('address').errors['required']\\\">\\n                        Hospital address is required\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-1\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"addLocale()\\\" *ngIf=\\\"last\\\"\\n                      [ngClass]=\\\"locale.invalid ? 'btn-warning' : 'btn-primary'\\\" [disabled]=\\\"locale.invalid\\\"\\n                      class=\\\"btn  btn-sm  btn-primary\\\">\\n                      <i class=\\\"fa fa-plus\\\"></i>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm rounded  btn-danger\\\" (click)=\\\"deleteLocale(i)\\\">\\n                      <i class=\\\"fa fa-trash \\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"text-right\\\">\\n              <button type=\\\"button\\\" (click)=\\\"addLocale()\\\" class=\\\"btn  btn-success\\\" *ngIf=\\\"hospitalLocales.length == 0\\\">\\n                <i class=\\\"fa fa-plus \\\"></i>Add Language\\n              </button>\\n            </div>\\n          </ng-template>\\n        </e-tabitem>\\n      </e-tabitems>\\n    </ejs-tab>\\n    <button type=\\\"submit\\\" [ngClass]=\\\"hospitalsForm.invalid ? 'btn-danger' : 'btn-success'\\\" class=\\\"btn\\\">\\n      Submit\\n    </button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation, ViewChild, AfterViewInit, AfterViewChecked } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Hospital, HospitalLocaleModel } from '../hospital-data.model';\nimport { HospitalsService } from '../hospitals.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { SystemApiService, Guid } from '../../../system-api.service';\nimport { UploaderComponent, ActionCompleteEventArgs } from '@syncfusion/ej2-angular-inputs';\n\n@Component({\n  selector: 'bionic-hospital-form',\n  templateUrl: './hospital-form.component.html',\n  styleUrls: ['./hospital-form.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HospitalFormComponent implements OnInit, AfterViewChecked {\n\n\n  public headerText: Object = [\n    { text: 'Enlish Language (default)' },\n    { text: 'Other Languages' }\n  ];\n\n  @ViewChild('defaultupload')\n  public defaultUpload: UploaderComponent;\n\n  public hospitalsForm: FormGroup;\n  private hospitalId: number;\n  public languages: any[];\n  public deletedIds: number[] = [];\n\n  isUpdate: boolean;\n  formId: string;\n  public preLoadFiles: Object[] = [\n    {\n      name: null,\n      size: null,\n      type: null\n    }\n  ];\n  path: { saveUrl: string; removeUrl: string };\n  constructor(\n    private forumBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private hospitalApi: HospitalsService,\n    private systemConfig: SystemApiService\n  ) {\n    this.createForm();\n\n    this.formId = Guid.newGuid();\n    this.path = {\n      saveUrl: `http://localhost/ilo_app/backend/index.php/upload/media/english/${\n        this.formId\n      }`,\n      removeUrl:\n        'http://localhost/ilo_app/backend/index.php/upload/media_delete/hospital'\n    };\n  }\n\n  ngOnInit() {\n\n    this.hospitalId = +this.activatedRoute.snapshot.paramMap.get('hospitalId');\n\n    if (this.hospitalId) {\n      this.path.removeUrl = this.path.removeUrl.concat(\n        `/${this.hospitalId.toString()}`\n      );\n      this.isUpdate = true;\n      this.hospitalApi\n        .getHospitalById(this.hospitalId)\n        .subscribe(\n          (data: Hospital) => this.initializeForm(data),\n          (error: HttpErrorResponse) => alert(error.message)\n        );\n    }\n\n    this.systemConfig\n      .getLanguagesList()\n      .subscribe((lang: any) => (this.languages = lang));\n  }\n\n\n  ngAfterViewChecked(): void {\n\n  }\n  createForm() {\n\n    this.hospitalsForm = this.forumBuilder.group({\n      phoneNumber: ['', Validators.required],\n      address: ['', Validators.required],\n      name: ['', Validators.required],\n      region: ['', Validators.required],\n      hospitalLocale: this.forumBuilder.array([])\n    });\n  }\n\n  generateLocaleForm(): FormGroup {\n\n    return this.forumBuilder.group({\n      address: ['', Validators.required],\n      locale: ['', Validators.required],\n      name: ['', Validators.required],\n      region: ['', Validators.required]\n    });\n  }\n\n  deleteLocale(index) {\n    const deletedControlId = this.hospitalLocales.controls[index].get('id');\n\n    if (deletedControlId) {\n      const conf = confirm('Are you sure you want to delete');\n\n      if (conf) {\n        this.deletedIds.push(deletedControlId.value);\n        this.hospitalLocales.removeAt(index);\n      }\n    } else {\n      this.hospitalLocales.removeAt(index);\n    }\n  }\n\n  onSele\n\n  initializeForm(hospital: Hospital) {\n    this.hospitalsForm = this.forumBuilder.group({\n      phoneNumber: [hospital.hospital.phone_number, Validators.required],\n      address: [hospital.hospital.address, Validators.required],\n      name: [hospital.hospital.name, Validators.required],\n      region: [hospital.hospital.region, Validators.required],\n      hospitalLocale: this.forumBuilder.array([])\n    });\n    this.defaultUpload.clearAll();\n    if (hospital.image.length) {\n      this.preLoadFiles = hospital.image;\n    }\n\n    hospital.hospital_locale.map(locale =>\n      this.hospitalLocales.controls.push(this.initializeLocalesForm(locale))\n    );\n  }\n\n  get hospitalLocales(): FormArray {\n    return this.hospitalsForm.get('hospitalLocale') as FormArray;\n  }\n  initializeLocalesForm(locale: HospitalLocaleModel) {\n    return this.forumBuilder.group({\n      id: [locale.ID],\n      address: [locale.address, Validators.required],\n      name: [locale.name, Validators.required],\n      locale: [locale.locale, Validators.required]\n    });\n  }\n\n  get hospitalName(): FormControl {\n    return this.hospitalsForm.get('name') as FormControl;\n  }\n  get phoneNumber(): FormControl {\n    return this.hospitalsForm.get('phoneNumber') as FormControl;\n  }\n  get region(): FormControl {\n    return this.hospitalsForm.get('region') as FormControl;\n  }\n\n  get address(): FormControl {\n    return this.hospitalsForm.get('address') as FormControl;\n  }\n  addLocale(): void {\n    this.hospitalLocales.controls.push(\n      this.forumBuilder.group({\n        address: ['', Validators.required],\n        locale: ['', Validators.required],\n        name: ['', Validators.required]\n      })\n    );\n  }\n\n  imageUploaded(event: ActionCompleteEventArgs) {\n    const upload  = event.fileData.filter((res) => res.statusCode ===  \"2\" )\n\n    if(upload === null) {\n\n      return;\n    }\n  }\n  onSubmit() {\n    this.defaultUpload.upload(this.defaultUpload.getFilesData());\n    const hospitalData = this.prepareFormData();\n    if (hospitalData) {\n      if (this.isUpdate) {\n        this.hospitalApi\n          .updateHospitalAddress(hospitalData)\n          .subscribe(\n            () => alert('Medical Centers updated successfully'),\n            (error: HttpErrorResponse) => alert(error.message)\n          );\n      } else {\n        this.hospitalApi\n          .addHospitalAddress(hospitalData)\n          .subscribe((data: any) => {\n            this.hospitalId = data;\n            this.isUpdate = true;\n            alert('Medical center added successfuly');\n          });\n      }\n    }\n  }\n\n  private prepareFormData(): Hospital | null {\n    const hospitalData = new Hospital();\n    if (this.hospitalsForm.valid) {\n      if (this.isUpdate && this.hospitalId) {\n        hospitalData.hospital = {\n          ID: this.hospitalId,\n          phone_number: this.phoneNumber.value,\n          address: this.address.value,\n          name: this.hospitalName.value,\n          region: this.region.value\n        };\n      } else {\n        hospitalData.hospital = {\n          phone_number: this.phoneNumber.value,\n          address: this.address.value,\n          name: this.hospitalName.value,\n          region: this.region.value\n        };\n      }\n      this.hospitalLocales.controls.forEach(element => {\n        hospitalData.hospital_locale.push({\n          ID: element.value.id,\n          address: element.value.address,\n          locale: element.value.locale,\n          name: element.value.name\n        });\n      });\n\n      this.deletedIds.map(element =>\n        hospitalData.deleted_ids.hospital_locale.push(element)\n      );\n      hospitalData.token = this.formId;\n      return hospitalData;\n    } else {\n      return null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HospitalsViewComponent } from './hospitals-view/hospitals-view.component';\nimport { HospitalFormComponent } from './hospital-form/hospital-form.component';\n\nconst routes: Routes = [\n  { path: '', component: HospitalsViewComponent },\n  { path: 'new', component: HospitalFormComponent },\n  { path: ':hospitalId/update', component: HospitalFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HospitalsRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2lsby1hZG1pbi9zcmMvYXBwL2ZlYXR1cmVzL2hvc3BpdGFscy9ob3NwaXRhbHMtdmlldy9ob3NwaXRhbHMtdmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<bionic-data-grid-view\\n  [data]=\\\"data\\\"\\n  [columnsList]=\\\"columnsList\\\"\\n  [idKey]=\\\"'ID'\\\"\\n  [showDelete]=\\\"true\\\"\\n  [showUpdate]=\\\"true\\\"\\n  [showColumnChooser]=\\\"true\\\"\\n  [enableSearching]=\\\"true\\\"\\n></bionic-data-grid-view>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CustomGridColumns } from '@bionic/shared-component';\nimport { HospitalsService } from '../hospitals.service';\nimport { HospitalViewModel } from '../hospital-data.model';\n\n@Component({\n  selector: 'bionic-hospitals-view',\n  templateUrl: './hospitals-view.component.html',\n  styleUrls: ['./hospitals-view.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HospitalsViewComponent implements OnInit {\n  public data: any;\n  public columnsList: CustomGridColumns[] = [\n    {\n      header: 'Hospital Name',\n      key: 'name',\n      type: 'string',\n      visible: true\n    },\n    {\n      header: 'Phonenumber',\n      key: 'phone_number',\n      type: 'string',\n      visible: true,\n      width: 100\n    },\n    {\n      header: 'Address',\n      key: 'address',\n      type: 'string',\n      visible: true,\n      width: 150\n    },\n    {\n      header: 'Region',\n      key: 'region',\n      type: 'string',\n      visible: true,\n      width: 100\n    },\n    {\n      header: 'Added',\n      key: 'date_added',\n      type: 'date',\n      format: 'yMd',\n      visible: false,\n      width: 100\n    },\n    {\n      header: 'Updated',\n      key: 'date_updated',\n      type: 'date',\n      format: 'yMd',\n      visible: false,\n      width: 100\n    }\n  ];\n  constructor(private hospitalApi: HospitalsService) {}\n\n  ngOnInit() {\n    this.hospitalApi\n      .getHospitalsList()\n      .subscribe((data: HospitalViewModel[]) => (this.data = data));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HospitalsRoutingModule } from './hospitals-routing.module';\nimport { HospitalsViewComponent } from './hospitals-view/hospitals-view.component';\nimport { HospitalFormComponent } from './hospital-form/hospital-form.component';\nimport { SharedComponentModule } from '@bionic/shared-component';\nimport { HospitalsService } from './hospitals.service';\nimport { TabModule } from '@syncfusion/ej2-angular-navigations';\nimport { UploaderModule } from '@syncfusion/ej2-angular-inputs';\n\n@NgModule({\n  declarations: [HospitalFormComponent, HospitalsViewComponent],\n  imports: [\n    CommonModule,\n    HospitalsRoutingModule,\n    TabModule,\n    SharedComponentModule,\n    UploaderModule\n  ],\n  providers: [HospitalsService]\n})\nexport class HospitalsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  HospitalViewModel,\n  HospitalModel,\n  Hospital\n} from './hospital-data.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HospitalsService {\n  private controller = 'hospitals';\n  private httpBody: URLSearchParams;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getHospitalById(hospitalId: number): Observable<Hospital> {\n    return this.httpClient.get<Hospital>(`${this.controller}/${hospitalId}`);\n  }\n\n  getHospitalsList(): Observable<HospitalViewModel[]> {\n    return this.httpClient.get<HospitalViewModel[]>(`${this.controller}`);\n  }\n\n  addHospitalAddress(hospital: Hospital): Observable<HospitalViewModel> {\n    return this.httpClient.post<HospitalViewModel>(\n      `${this.controller}`,\n      hospital\n    );\n  }\n\n  updateHospitalAddress(hospital: Hospital): Observable<void> {\n    return this.httpClient.post<void>(\n      `${this.controller}/update/${hospital.hospital.ID}`,\n      hospital\n    );\n  }\n\n  deleteHospitalAddress(hospitalId: number[]): Observable<void> {\n    const idArr: any[] = [];\n    hospitalId.forEach(id => idArr.push({ id: `${id}` }));\n    return this.httpClient.post<void>(`${this.controller}/delete`, idArr);\n  }\n}\n"],"sourceRoot":""}