{"version":3,"sources":["webpack:///./src/app/features/users/password-change-form/password-change-form.component.css","webpack:///./src/app/features/users/password-change-form/password-change-form.component.html","webpack:///./src/app/features/users/password-change-form/password-change-form.component.ts","webpack:///./src/app/features/users/user-api.service.ts","webpack:///./src/app/features/users/user-form/user-form.component.css","webpack:///./src/app/features/users/user-form/user-form.component.html","webpack:///./src/app/features/users/user-form/user-form.component.ts","webpack:///./src/app/features/users/user-view/user-view.component.css","webpack:///./src/app/features/users/user-view/user-view.component.html","webpack:///./src/app/features/users/user-view/user-view.component.ts","webpack:///./src/app/features/users/user.model.ts","webpack:///./src/app/features/users/users-routing.module.ts","webpack:///./src/app/features/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["module.exports = \".card {\\n  padding: 2em;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvaWxvLWFkbWluL3NyYy9hcHAvZmVhdHVyZXMvdXNlcnMvcGFzc3dvcmQtY2hhbmdlLWZvcm0vcGFzc3dvcmQtY2hhbmdlLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJhcHBzL2lsby1hZG1pbi9zcmMvYXBwL2ZlYXR1cmVzL3VzZXJzL3Bhc3N3b3JkLWNoYW5nZS1mb3JtL3Bhc3N3b3JkLWNoYW5nZS1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gIHBhZGRpbmc6IDJlbTtcbn1cbiJdfQ== */\"","module.exports = \"<section class=\\\"container card\\\">\\n  <form [formGroup]=\\\"passwordChangeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n      <label for=\\\"currentPassword\\\" i18n>Current password</label>\\n      <div class=\\\"col-12 form-group\\\">\\n        <input\\n          type=\\\"password\\\"\\n          formControlName=\\\"currentPassword\\\"\\n          i18n-placeholder\\n          class=\\\"form-control\\\"\\n          id=\\\"currentPassword\\\"\\n          name=\\\"currentPassword\\\"\\n          placeholder=\\\"Current password\\\"\\n        />\\n        <div class=\\\"e-error\\\" *ngIf=\\\"currentPassword.errors\\\">\\n          <div *ngIf=\\\"currentPassword.errors['required']\\\" i18n>\\n            Current password is required\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <label for=\\\"newPassword\\\" i18n>New password</label>\\n      <div class=\\\"form-group col-12\\\">\\n        <input\\n          type=\\\"password\\\"\\n          formControlName=\\\"newPassword\\\"\\n          i18n-placeholder\\n          class=\\\"form-control\\\"\\n          id=\\\"newPassword\\\"\\n          name=\\\"newPassword\\\"\\n          placeholder=\\\"New password\\\"\\n        />\\n        <div class=\\\"e-error\\\" *ngIf=\\\"newPassword.errors\\\">\\n          <div *ngIf=\\\"newPassword.errors['required']\\\" i18n>\\n            New password is required\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <label for=\\\"confirmedPassword\\\" i18n>New password confirmation</label>\\n      <div class=\\\"col-12 form-group\\\">\\n        <input\\n          type=\\\"password\\\"\\n          formControlName=\\\"confirmedPassword\\\"\\n          i18n-placeholder\\n          class=\\\"form-control\\\"\\n          id=\\\"confirmedPassword\\\"\\n          name=\\\"confirmedPassword\\\"\\n          placeholder=\\\"New password confirmation\\\"\\n        />\\n        <div class=\\\"e-error\\\" *ngIf=\\\"confirmedPassword.errors\\\">\\n          <div *ngIf=\\\"confirmedPassword.errors['required']\\\" i18n>\\n            New password confirmation password is required\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <app-form-options\\n      [submitDisabled]=\\\"passwordChangeForm.invalid\\\"\\n    ></app-form-options>\\n  </form>\\n</section>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  Validators,\n  FormBuilder,\n  FormGroup,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserApiService } from '../user-api.service';\n\n@Component({\n  selector: 'app-password-change-form',\n  templateUrl: './password-change-form.component.html',\n  styleUrls: ['./password-change-form.component.css']\n})\nexport class PasswordChangeFormComponent implements OnInit {\n  private userId: string;\n  public passwordChangeForm: FormGroup;\n\n  constructor(\n    private userApi: UserApiService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.userId = this.activatedRoute.snapshot.paramMap.get('userId');\n  }\n\n  private createForm(): void {\n    this.passwordChangeForm = this.formBuilder.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmedPassword: ['', Validators.required]\n    });\n  }\n\n  get currentPassword(): FormControl {\n    return this.passwordChangeForm.get('currentPassword') as FormControl;\n  }\n\n  get newPassword(): FormControl {\n    return this.passwordChangeForm.get('newPassword') as FormControl;\n  }\n\n  get confirmedPassword(): FormControl {\n    return this.passwordChangeForm.get('confirmedPassword') as FormControl;\n  }\n\n  onSubmit(): void {\n    const formData = this.prepareFormData();\n\n    /*  if (formData) {\n      this.userApi.updateUser(formData).subscribe(\n        () => {\n          alert('Password updated successfuly');\n          this.passwordChangeForm.reset();\n        },\n        (error) => {\n          alert(error.message);\n        }\n      );\n    } else {\n      alert('One or more required fields missing');\n    } */\n  }\n\n  private prepareFormData() {\n    if (this.passwordChangeForm.valid) {\n      return {\n        id: this.userId,\n        currentPassword: this.currentPassword.value,\n        newPassword: this.newPassword.value,\n        confirmedPassword: this.confirmedPassword.value\n      };\n    } else {\n      return null;\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { UserViewModel, User } from './user.model';\n\n@Injectable()\nexport class UserApiService {\n  private controller = 'users';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getUserById(userId: number): Observable<User> {\n    return this.httpClient.get<User>(`${this.controller}/${userId}`);\n  }\n\n  getAllUsers(): Observable<UserViewModel[]> {\n    return this.httpClient.get<UserViewModel[]>(`${this.controller}`);\n  }\n\n  createUser(newUser: User): Observable<UserViewModel> {\n    return this.httpClient.post<UserViewModel>(`${this.controller}`, newUser);\n  }\n\n  updateUser(updatedUser: User): Observable<void> {\n    return this.httpClient.post<void>(\n      `${this.controller}/update/${updatedUser.user.ID}`,\n      updatedUser\n    );\n  }\n\n  deleteUser(userId: number[]): Observable<void> {\n    const idArr: any[] = [];\n    userId.forEach(id => idArr.push({ id: `${id}` }));\n    return this.httpClient.post<void>(`${this.controller}/delete`, idArr);\n  }\n}\n","module.exports = \"#userName {\\n  width: 30%;\\n}\\n\\nsection {\\n  padding: 1em;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvaWxvLWFkbWluL3NyYy9hcHAvZmVhdHVyZXMvdXNlcnMvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImFwcHMvaWxvLWFkbWluL3NyYy9hcHAvZmVhdHVyZXMvdXNlcnMvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3VzZXJOYW1lIHtcbiAgd2lkdGg6IDMwJTtcbn1cblxuc2VjdGlvbiB7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbiJdfQ== */\"","module.exports = \"<section class=\\\"card\\\">\\n  <form id=\\\"reactive\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-6 form-group\\\">\\n          <label for=\\\"username\\\">Username</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"userName\\\"\\n            id=\\\"username\\\"\\n            placeholder=\\\"Username\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-6 form-group\\\">\\n          <label for=\\\"Fullname\\\">Fullname</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"fullName\\\"\\n            id=\\\"Fullname\\\"\\n            placeholder=\\\"Fullname\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isUpdate\\\">\\n        <div class=\\\"col-12 form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input\\n            type=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\"\\n            placeholder=\\\"Password\\\"\\n          />\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn  btn-success\\\">Submit</button>\\n    </div>\\n  </form>\\n</section>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { UserApiService } from '../user-api.service';\nimport { UserViewModel } from 'libs/authorization/src/lib/log-in/log-in.component';\nimport { UserModel, User } from '../user.model';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  public isUpdate: Boolean;\n  public userForm: FormGroup;\n  public rolesList: any[] = [];\n  private userId: number;\n\n  public roleFields: { text: string; value: string };\n\n  constructor(\n    private userApi: UserApiService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private location: Location\n  ) {\n    this.usersForm();\n    this.roleFields = { text: 'name', value: 'id' };\n  }\n\n  ngOnInit(): void {\n    // get user is from route parameter if it exists\n    this.userId = +this.activatedRoute.snapshot.paramMap.get('userId');\n    this.isUpdate = false;\n    if (this.userId) {\n      // if user id exist get value and initialize form\n      this.isUpdate = true;\n      this.userApi\n        .getUserById(this.userId)\n        .subscribe((user: User) => this.initilizeForm(user));\n    }\n  }\n\n  // ─── INTIALIZING USERS FORM ─────────────\n  usersForm(): void {\n    this.userForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      fullName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  initilizeForm(user: User): void {\n    this.userForm = this.formBuilder.group({\n      id: [user.user.ID, Validators.required],\n      userName: [user.user.username, Validators.required],\n      fullName: [user.user.fullname, Validators.required]\n    });\n  }\n\n  get userName(): FormControl {\n    return this.userForm.get('userName') as FormControl;\n  }\n  get password(): FormControl {\n    return this.userForm.get('password') as FormControl;\n  }\n\n  get fullName(): FormControl {\n    return this.userForm.get('fullName') as FormControl;\n  }\n\n  private prepareFormData(): User | null {\n    let userData: User = new User();\n\n    if (this.userForm.valid) {\n      userData.user = {\n        ID: this.userId,\n        username: this.userName.value,\n        fullname: this.fullName.value,\n        password: this.password.value\n      };\n      return userData;\n    }\n\n    return null;\n  }\n\n  onSubmit(): void {\n    const data = this.prepareFormData();\n\n    if (data) {\n      if (this.userId && data != null) {\n        this.userApi.updateUser(data).subscribe(\n          () => {\n            alert('User Updated Successfuly!!!');\n            this.userForm.reset();\n          },\n          error => {\n            alert(\n              'Error Occured while attempting to create user try again later!!!'\n            );\n          }\n        );\n      } else {\n        this.userApi.createUser(data).subscribe(\n          () => {\n            alert('User Created Successfuly!!!');\n            this.userForm.reset();\n          },\n          error => {\n            alert(\n              'Unknown Error Occured while updating user data, try again later'\n            );\n          }\n        );\n      }\n    }\n  }\n\n  onDelete(): void {\n    if (this.userId) {\n      this.userApi.deleteUser([this.userId]).subscribe(\n        () => {\n          alert('User Deleted successfuly');\n        },\n        error => {\n          alert('Unable to delete user, please try again later');\n        }\n      );\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2lsby1hZG1pbi9zcmMvYXBwL2ZlYXR1cmVzL3VzZXJzL3VzZXItdmlldy91c2VyLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<bionic-data-grid-view\\n  [data]=\\\"data\\\"\\n  [columnsList]=\\\"columnBluePrint\\\"\\n  [idKey]=\\\"'ID'\\\"\\n  [showDelete]=\\\"true\\\"\\n  [showUpdate]=\\\"false\\\"\\n  [enableFilter]=\\\"true\\\"\\n  [enablePaging]=\\\"true\\\"\\n  [enableSorting]=\\\"true\\\"\\n  (deleteRecord)=\\\"deleteUser($event)\\\"\\n>\\n</bionic-data-grid-view>\\n\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\nimport { closest } from '@syncfusion/ej2-base';\nimport {\n  Column,\n  CommandModel,\n  EditSettingsModel,\n  FilterSettingsModel,\n  GridComponent,\n  IRow,\n  PageSettingsModel,\n  SortSettingsModel,\n  TextWrapSettingsModel,\n  ToolbarItems\n} from '@syncfusion/ej2-angular-grids';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserViewModel } from 'libs/authorization/src/lib/log-in/log-in.component';\nimport { UserApiService } from '../user-api.service';\nimport { CustomGridColumns } from '@bionic/shared-component';\nimport { AuthorizationService } from '../../../authorization.service';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.css']\n})\nexport class UserViewComponent implements OnInit {\n  @ViewChild('grid')\n  public grid: GridComponent;\n\n  public data: UserViewModel[];\n  public wrapSettings: TextWrapSettingsModel;\n\n  public columnBluePrint: CustomGridColumns[] = [\n    {\n      key: 'id',\n      header: 'ID',\n      visible: false,\n      type: 'string',\n      width: 40\n    },\n    {\n      key: 'username',\n      header: 'UserName',\n      visible: true,\n      type: 'string'\n    },\n    {\n      key: 'fullname',\n      header: 'Phonenumber',\n      visible: true,\n      type: 'string',\n      width: 100\n    },\n    {\n      key: 'email',\n      header: 'E-mail',\n      visible: true,\n      type: 'string',\n      width: 100\n    }\n  ];\n\n  constructor(\n    private userApi: UserApiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthorizationService\n  ) {}\n  dataBound() {}\n\n  ngOnInit(): void {\n    this.authService.readToken();\n    this.userApi\n      .getAllUsers()\n      .subscribe((userView: any[]) => (this.data = userView));\n  }\n\n  deleteUser(args: any): void {\n    this.userApi.deleteUser(args.ID).subscribe(\n      () => {\n        alert('User deleted');\n        this.grid.deleteRecord();\n      },\n      error => {\n        alert('Unable to Delete User');\n      }\n    );\n  }\n}\n","export class UserViewModel {\n  id: number;\n  username: string;\n  phone_number: string;\n  email: string;\n  roleId: string;\n  role: string;\n}\n\nexport class UserModel {\n  ID?: number;\n  username: string;\n  fullname: string;\n  password: string;\n}\n\nexport class User {\n  user: UserModel;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserViewComponent } from './user-view/user-view.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { PasswordChangeFormComponent } from './password-change-form/password-change-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserViewComponent,\n    data: {\n      title: 'Users',\n      breadCrum: ''\n    }\n  },\n  {\n    path: 'password-update',\n    component: PasswordChangeFormComponent,\n    data: { title: 'Create user', breadCrum: 'Create' }\n  },\n  {\n    path: 'new',\n    component: UserFormComponent,\n    data: { title: 'Create user', breadCrum: 'Create' }\n  },\n  {\n    path: ':userId/update',\n    component: UserFormComponent,\n    data: { title: 'Update user', breadCrum: 'Update' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserViewComponent } from './user-view/user-view.component';\nimport { PasswordChangeFormComponent } from './password-change-form/password-change-form.component';\nimport { SharedComponentModule } from '@bionic/shared-component';\nimport { UserApiService } from './user-api.service';\n\n@NgModule({\n  declarations: [\n    UserFormComponent,\n    UserViewComponent,\n    PasswordChangeFormComponent\n  ],\n  imports: [CommonModule, SharedComponentModule, UsersRoutingModule],\n  providers: [UserApiService]\n})\nexport class UsersModule {}\n"],"sourceRoot":""}